"use strict";(self.webpackChunkflutter_guia_completa=self.webpackChunkflutter_guia_completa||[]).push([[5402],{7811:(e,n,t)=>{t.d(n,{A:()=>o});var i=t(6540),a=t(1028);const r={codeSnippetContainer:"codeSnippetContainer_uJyI",header:"header_z4pd",title:"title_crXx",copyButton:"copyButton_btfw",copied:"copied_whsi",codeContainer:"codeContainer_stuK"};var s=t(4848);function o({code:e,language:n="bash",title:t="Terminal",copyable:o=!0}){const[l,d]=(0,i.useState)(!1);return(0,s.jsxs)("div",{className:r.codeSnippetContainer,children:[(0,s.jsxs)("div",{className:r.header,children:[(0,s.jsxs)("span",{className:r.title,children:["\ud83d\udcf1 ",t]}),o&&(0,s.jsx)("button",{className:`${r.copyButton} ${l?r.copied:""}`,onClick:async()=>{try{await navigator.clipboard.writeText(e),d(!0),setTimeout(()=>d(!1),2e3)}catch(n){console.error("Failed to copy code:",n)}},"aria-label":"Copiar c\xf3digo",children:l?"\u2705 Copiado!":"\ud83d\udccb Copiar"})]}),(0,s.jsx)("div",{className:r.codeContainer,children:(0,s.jsx)(a.A,{language:n,title:"",children:e})})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},9804:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"desarrollo/auth","title":"\ud83d\udd10 Sistema de Autenticaci\xf3n Completo","description":"Objetivo: Implementar autenticaci\xf3n robusta con Email, Google y Apple Sign-In","source":"@site/docs/desarrollo/auth.md","sourceDirName":"desarrollo","slug":"/desarrollo/auth","permalink":"/flutterFormacion/docs/desarrollo/auth","draft":false,"unlisted":false,"editUrl":"https://github.com/tu-usuario/flutter-guia-completa/tree/main/docs/desarrollo/auth.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udfd7\ufe0f Estructura del Proyecto","permalink":"/flutterFormacion/docs/proyecto/estructura"},"next":{"title":"\ud83c\udfdb\ufe0f Arquitectura y Patrones","permalink":"/flutterFormacion/docs/desarrollo/arquitectura"}}');var a=t(4848),r=t(8453),s=t(7811);const o={sidebar_position:1},l="\ud83d\udd10 Sistema de Autenticaci\xf3n Completo",d={},c=[{value:"\ud83c\udfaf <strong>Funcionalidades del Sistema</strong>",id:"-funcionalidades-del-sistema",level:2},{value:"\ud83d\udd11 <strong>M\xe9todos de autenticaci\xf3n:</strong>",id:"-m\xe9todos-de-autenticaci\xf3n",level:3},{value:"\u2728 <strong>Caracter\xedsticas avanzadas:</strong>",id:"-caracter\xedsticas-avanzadas",level:3},{value:"\ud83d\udccb <strong>Dependencias Necesarias</strong>",id:"-dependencias-necesarias",level:2},{value:"\ud83d\udd27 <strong>Actualizar pubspec.yaml</strong>",id:"-actualizar-pubspecyaml",level:3},{value:"\ud83c\udfd7\ufe0f <strong>Arquitectura de Autenticaci\xf3n</strong>",id:"\ufe0f-arquitectura-de-autenticaci\xf3n",level:2},{value:"\ud83d\udcc1 <strong>Estructura de archivos</strong>",id:"-estructura-de-archivos",level:3},{value:"\ud83c\udfaf <strong>Entidades del Dominio</strong>",id:"-entidades-del-dominio",level:2},{value:"\ud83d\udc64 <strong>User Entity</strong>",id:"-user-entity",level:3},{value:"\ud83d\udd10 <strong>AuthResult Entity</strong>",id:"-authresult-entity",level:3},{value:"\ud83d\udcca <strong>Repository Contract</strong>",id:"-repository-contract",level:2},{value:"\ud83d\udd0c <strong>Auth Repository Interface</strong>",id:"-auth-repository-interface",level:3},{value:"\ud83d\udd27 <strong>Casos de Uso</strong>",id:"-casos-de-uso",level:2},{value:"\ud83c\udfaf <strong>Login with Email Use Case</strong>",id:"-login-with-email-use-case",level:3},{value:"\ud83d\udcca <strong>Estado de Autenticaci\xf3n</strong>",id:"-estado-de-autenticaci\xf3n",level:2},{value:"\ud83c\udfd7\ufe0f <strong>Auth Cubit</strong>",id:"\ufe0f-auth-cubit",level:3},{value:"\ud83c\udfad <strong>Auth State</strong>",id:"-auth-state",level:3},{value:"\ud83c\udfa8 <strong>Interfaz de Usuario</strong>",id:"-interfaz-de-usuario",level:2},{value:"\ud83d\udd10 <strong>Login Page</strong>",id:"-login-page",level:3},{value:"\ud83c\udfa8 <strong>Custom Auth Widgets</strong>",id:"-custom-auth-widgets",level:3},{value:"\ud83d\udd12 <strong>Configuraci\xf3n Firebase</strong>",id:"-configuraci\xf3n-firebase",level:2},{value:"\ud83d\udd25 <strong>Inicializaci\xf3n Firebase</strong>",id:"-inicializaci\xf3n-firebase",level:3},{value:"\u2699\ufe0f <strong>Configuraci\xf3n iOS (Apple Sign-In)</strong>",id:"\ufe0f-configuraci\xf3n-ios-apple-sign-in",level:3},{value:"\ud83e\udd16 <strong>Configuraci\xf3n Android</strong>",id:"-configuraci\xf3n-android",level:3},{value:"\u2705 <strong>Checklist de Implementaci\xf3n</strong>",id:"-checklist-de-implementaci\xf3n",level:2},{value:"\ud83c\udfaf <strong>Siguiente Paso</strong>",id:"-siguiente-paso",level:2}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"-sistema-de-autenticaci\xf3n-completo",children:"\ud83d\udd10 Sistema de Autenticaci\xf3n Completo"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Objetivo"}),": Implementar autenticaci\xf3n robusta con Email, Google y Apple Sign-In"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Implementaremos un sistema de autenticaci\xf3n completo siguiendo las mejores pr\xe1cticas de seguridad y UX, basado en la aplicaci\xf3n real ",(0,a.jsx)(n.strong,{children:"BeamMe"}),"."]}),"\n",(0,a.jsxs)(n.h2,{id:"-funcionalidades-del-sistema",children:["\ud83c\udfaf ",(0,a.jsx)(n.strong,{children:"Funcionalidades del Sistema"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-m\xe9todos-de-autenticaci\xf3n",children:["\ud83d\udd11 ",(0,a.jsx)(n.strong,{children:"M\xe9todos de autenticaci\xf3n:"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\ud83d\udce7 ",(0,a.jsx)(n.strong,{children:"Email y contrase\xf1a"})," - Registro/login tradicional"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83c\udf10 ",(0,a.jsx)(n.strong,{children:"Google Sign-In"})," - OAuth con Google"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83c\udf4e ",(0,a.jsx)(n.strong,{children:"Apple Sign-In"})," - OAuth con Apple (iOS)"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83d\udcf1 ",(0,a.jsx)(n.strong,{children:"Verificaci\xf3n por SMS"})," - Opcional para mayor seguridad"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,a.jsx)(n.strong,{children:"Recuperaci\xf3n de contrase\xf1a"})," - Reset por email"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"-caracter\xedsticas-avanzadas",children:["\u2728 ",(0,a.jsx)(n.strong,{children:"Caracter\xedsticas avanzadas:"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\ud83d\udd10 ",(0,a.jsx)(n.strong,{children:"Persistencia de sesi\xf3n"})," - Remember me"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83d\udee1\ufe0f ",(0,a.jsx)(n.strong,{children:"Validaci\xf3n en tiempo real"})," - UX mejorada"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83d\udcca ",(0,a.jsx)(n.strong,{children:"Estados de loading"})," - Feedback visual"]}),"\n",(0,a.jsxs)(n.li,{children:["\u274c ",(0,a.jsx)(n.strong,{children:"Manejo de errores"})," - Mensajes informativos"]}),"\n",(0,a.jsxs)(n.li,{children:["\ud83c\udfa8 ",(0,a.jsx)(n.strong,{children:"Interfaz adaptativa"})," - Responsive design"]}),"\n"]}),"\n",(0,a.jsxs)(n.h2,{id:"-dependencias-necesarias",children:["\ud83d\udccb ",(0,a.jsx)(n.strong,{children:"Dependencias Necesarias"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-actualizar-pubspecyaml",children:["\ud83d\udd27 ",(0,a.jsx)(n.strong,{children:"Actualizar pubspec.yaml"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="pubspec.yaml - Dependencias Auth"',children:"dependencies:\n  # \ud83d\udd11 Autenticaci\xf3n\n  firebase_auth: ^4.15.3\n  firebase_core: ^2.24.2\n  google_sign_in: ^6.1.6\n  sign_in_with_apple: ^5.0.0\n  crypto: ^3.0.3\n  \n  # \ud83d\udcf1 UI Components\n  flutter_signin_button: ^2.0.0\n  pinput: ^3.0.1\n  \n  # \ud83d\udd27 Utilities\n  validators: ^3.0.0\n  equatable: ^2.0.5\n  \n  # \ud83c\udfd7\ufe0f State Management\n  flutter_bloc: ^8.1.3\n  \n  # \ud83d\udcbe Storage\n  shared_preferences: ^2.2.2\n  flutter_secure_storage: ^9.0.0\n\ndev_dependencies:\n  # \ud83e\uddea Testing Auth\n  mockito: ^5.4.4\n  firebase_auth_mocks: ^0.13.0\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"\ufe0f-arquitectura-de-autenticaci\xf3n",children:["\ud83c\udfd7\ufe0f ",(0,a.jsx)(n.strong,{children:"Arquitectura de Autenticaci\xf3n"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-estructura-de-archivos",children:["\ud83d\udcc1 ",(0,a.jsx)(n.strong,{children:"Estructura de archivos"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"lib/\n\u251c\u2500\u2500 domain/\n\u2502   \u251c\u2500\u2500 entities/\n\u2502   \u2502   \u251c\u2500\u2500 user.dart\n\u2502   \u2502   \u2514\u2500\u2500 auth_result.dart\n\u2502   \u251c\u2500\u2500 repositories/\n\u2502   \u2502   \u2514\u2500\u2500 auth_repository.dart\n\u2502   \u2514\u2500\u2500 usecases/\n\u2502       \u251c\u2500\u2500 login_with_email_usecase.dart\n\u2502       \u251c\u2500\u2500 login_with_google_usecase.dart\n\u2502       \u251c\u2500\u2500 login_with_apple_usecase.dart\n\u2502       \u251c\u2500\u2500 register_usecase.dart\n\u2502       \u251c\u2500\u2500 logout_usecase.dart\n\u2502       \u2514\u2500\u2500 get_current_user_usecase.dart\n\u2502\n\u251c\u2500\u2500 data/\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u251c\u2500\u2500 user_model.dart\n\u2502   \u2502   \u2514\u2500\u2500 auth_result_model.dart\n\u2502   \u251c\u2500\u2500 datasources/\n\u2502   \u2502   \u251c\u2500\u2500 local/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 auth_local_datasource.dart\n\u2502   \u2502   \u2514\u2500\u2500 remote/\n\u2502   \u2502       \u2514\u2500\u2500 auth_remote_datasource.dart\n\u2502   \u2514\u2500\u2500 repositories/\n\u2502       \u2514\u2500\u2500 auth_repository_impl.dart\n\u2502\n\u2514\u2500\u2500 presentation/\n    \u251c\u2500\u2500 pages/\n    \u2502   \u251c\u2500\u2500 auth/\n    \u2502   \u2502   \u251c\u2500\u2500 login_page.dart\n    \u2502   \u2502   \u251c\u2500\u2500 register_page.dart\n    \u2502   \u2502   \u251c\u2500\u2500 forgot_password_page.dart\n    \u2502   \u2502   \u2514\u2500\u2500 phone_verification_page.dart\n    \u2502   \u2514\u2500\u2500 widgets/\n    \u2502       \u251c\u2500\u2500 auth_button.dart\n    \u2502       \u251c\u2500\u2500 social_login_buttons.dart\n    \u2502       \u2514\u2500\u2500 auth_text_field.dart\n    \u2514\u2500\u2500 cubit/\n        \u251c\u2500\u2500 auth_cubit.dart\n        \u2514\u2500\u2500 auth_state.dart\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-entidades-del-dominio",children:["\ud83c\udfaf ",(0,a.jsx)(n.strong,{children:"Entidades del Dominio"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-user-entity",children:["\ud83d\udc64 ",(0,a.jsx)(n.strong,{children:"User Entity"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/domain/entities/user.dart"',children:"import 'package:equatable/equatable.dart';\n\nclass User extends Equatable {\n  const User({\n    required this.id,\n    required this.email,\n    this.displayName,\n    this.photoURL,\n    this.phoneNumber,\n    this.emailVerified = false,\n    this.isAnonymous = false,\n    this.createdAt,\n    this.lastLoginAt,\n  });\n\n  final String id;\n  final String email;\n  final String? displayName;\n  final String? photoURL;\n  final String? phoneNumber;\n  final bool emailVerified;\n  final bool isAnonymous;\n  final DateTime? createdAt;\n  final DateTime? lastLoginAt;\n\n  @override\n  List<Object?> get props => [\n        id,\n        email,\n        displayName,\n        photoURL,\n        phoneNumber,\n        emailVerified,\n        isAnonymous,\n        createdAt,\n        lastLoginAt,\n      ];\n\n  User copyWith({\n    String? id,\n    String? email,\n    String? displayName,\n    String? photoURL,\n    String? phoneNumber,\n    bool? emailVerified,\n    bool? isAnonymous,\n    DateTime? createdAt,\n    DateTime? lastLoginAt,\n  }) {\n    return User(\n      id: id ?? this.id,\n      email: email ?? this.email,\n      displayName: displayName ?? this.displayName,\n      photoURL: photoURL ?? this.photoURL,\n      phoneNumber: phoneNumber ?? this.phoneNumber,\n      emailVerified: emailVerified ?? this.emailVerified,\n      isAnonymous: isAnonymous ?? this.isAnonymous,\n      createdAt: createdAt ?? this.createdAt,\n      lastLoginAt: lastLoginAt ?? this.lastLoginAt,\n    );\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"-authresult-entity",children:["\ud83d\udd10 ",(0,a.jsx)(n.strong,{children:"AuthResult Entity"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/domain/entities/auth_result.dart"',children:"import 'package:equatable/equatable.dart';\nimport 'user.dart';\n\nenum AuthStatus {\n  authenticated,\n  unauthenticated,\n  emailNotVerified,\n  phoneNotVerified,\n  accountDisabled,\n  error,\n}\n\nclass AuthResult extends Equatable {\n  const AuthResult({\n    required this.status,\n    this.user,\n    this.message,\n    this.errorCode,\n  });\n\n  final AuthStatus status;\n  final User? user;\n  final String? message;\n  final String? errorCode;\n\n  bool get isAuthenticated => status == AuthStatus.authenticated;\n  bool get needsEmailVerification => status == AuthStatus.emailNotVerified;\n  bool get needsPhoneVerification => status == AuthStatus.phoneNotVerified;\n  bool get hasError => status == AuthStatus.error;\n\n  @override\n  List<Object?> get props => [status, user, message, errorCode];\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-repository-contract",children:["\ud83d\udcca ",(0,a.jsx)(n.strong,{children:"Repository Contract"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-auth-repository-interface",children:["\ud83d\udd0c ",(0,a.jsx)(n.strong,{children:"Auth Repository Interface"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/domain/repositories/auth_repository.dart"',children:"import '../entities/user.dart';\nimport '../entities/auth_result.dart';\n\nabstract class AuthRepository {\n  // \ud83d\udd0d Estado actual\n  Future<User?> getCurrentUser();\n  Stream<User?> get authStateChanges;\n  \n  // \ud83d\udce7 Email Authentication\n  Future<AuthResult> signInWithEmail(String email, String password);\n  Future<AuthResult> registerWithEmail(\n    String email, \n    String password, \n    String displayName,\n  );\n  \n  // \ud83c\udf10 Social Authentication\n  Future<AuthResult> signInWithGoogle();\n  Future<AuthResult> signInWithApple();\n  \n  // \ud83d\udcf1 Phone Authentication\n  Future<void> verifyPhoneNumber(\n    String phoneNumber,\n    {\n      required Function(String verificationId) codeSent,\n      required Function(String error) verificationFailed,\n    }\n  );\n  Future<AuthResult> signInWithPhoneCredential(\n    String verificationId,\n    String smsCode,\n  );\n  \n  // \ud83d\udd04 Password Management\n  Future<void> sendPasswordResetEmail(String email);\n  Future<void> changePassword(String newPassword);\n  \n  // \u2709\ufe0f Email Verification\n  Future<void> sendEmailVerification();\n  Future<void> reloadUser();\n  \n  // \ud83d\udeaa Sign Out\n  Future<void> signOut();\n  \n  // \ud83d\uddd1\ufe0f Account Management\n  Future<void> deleteAccount();\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-casos-de-uso",children:["\ud83d\udd27 ",(0,a.jsx)(n.strong,{children:"Casos de Uso"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-login-with-email-use-case",children:["\ud83c\udfaf ",(0,a.jsx)(n.strong,{children:"Login with Email Use Case"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/domain/usecases/login_with_email_usecase.dart"',children:"import 'package:injectable/injectable.dart';\n\nimport '../../core/resources/use_case.dart';\nimport '../entities/auth_result.dart';\nimport '../repositories/auth_repository.dart';\n\n@injectable\nclass LoginWithEmailUseCase implements UseCase<AuthResult, LoginWithEmailParams> {\n  const LoginWithEmailUseCase(this._authRepository);\n\n  final AuthRepository _authRepository;\n\n  @override\n  Future<AuthResult> call(LoginWithEmailParams params) async {\n    // \ud83d\udce7 Validar formato email\n    if (!_isValidEmail(params.email)) {\n      return const AuthResult(\n        status: AuthStatus.error,\n        message: 'Formato de email inv\xe1lido',\n        errorCode: 'invalid-email-format',\n      );\n    }\n\n    // \ud83d\udd10 Validar contrase\xf1a\n    if (!_isValidPassword(params.password)) {\n      return const AuthResult(\n        status: AuthStatus.error,\n        message: 'La contrase\xf1a debe tener al menos 6 caracteres',\n        errorCode: 'weak-password',\n      );\n    }\n\n    try {\n      return await _authRepository.signInWithEmail(\n        params.email,\n        params.password,\n      );\n    } catch (e) {\n      return AuthResult(\n        status: AuthStatus.error,\n        message: e.toString(),\n        errorCode: 'login-failed',\n      );\n    }\n  }\n\n  bool _isValidEmail(String email) {\n    return RegExp(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')\n        .hasMatch(email);\n  }\n\n  bool _isValidPassword(String password) {\n    return password.length >= 6;\n  }\n}\n\nclass LoginWithEmailParams {\n  const LoginWithEmailParams({\n    required this.email,\n    required this.password,\n  });\n\n  final String email;\n  final String password;\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-estado-de-autenticaci\xf3n",children:["\ud83d\udcca ",(0,a.jsx)(n.strong,{children:"Estado de Autenticaci\xf3n"})]}),"\n",(0,a.jsxs)(n.h3,{id:"\ufe0f-auth-cubit",children:["\ud83c\udfd7\ufe0f ",(0,a.jsx)(n.strong,{children:"Auth Cubit"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/presentation/cubit/auth_cubit.dart"',children:"import 'dart:async';\n\nimport 'package:flutter_bloc/flutter_bloc.dart';\nimport 'package:injectable/injectable.dart';\nimport 'package:freezed/freezed.dart';\n\nimport '../../domain/entities/user.dart';\nimport '../../domain/entities/auth_result.dart';\nimport '../../domain/usecases/login_with_email_usecase.dart';\nimport '../../domain/usecases/login_with_google_usecase.dart';\nimport '../../domain/usecases/register_usecase.dart';\nimport '../../domain/usecases/logout_usecase.dart';\nimport '../../domain/usecases/get_current_user_usecase.dart';\n\npart 'auth_cubit.freezed.dart';\npart 'auth_state.dart';\n\n@injectable\nclass AuthCubit extends Cubit<AuthState> {\n  AuthCubit(\n    this._loginWithEmailUseCase,\n    this._loginWithGoogleUseCase,\n    this._registerUseCase,\n    this._logoutUseCase,\n    this._getCurrentUserUseCase,\n  ) : super(const AuthState.initial());\n\n  final LoginWithEmailUseCase _loginWithEmailUseCase;\n  final LoginWithGoogleUseCase _loginWithGoogleUseCase;\n  final RegisterUseCase _registerUseCase;\n  final LogoutUseCase _logoutUseCase;\n  final GetCurrentUserUseCase _getCurrentUserUseCase;\n\n  StreamSubscription<User?>? _authSubscription;\n\n  void initialize() {\n    _checkAuthState();\n    _listenToAuthChanges();\n  }\n\n  Future<void> _checkAuthState() async {\n    emit(const AuthState.loading());\n    \n    try {\n      final user = await _getCurrentUserUseCase.call(null);\n      \n      if (user != null) {\n        emit(AuthState.authenticated(user));\n      } else {\n        emit(const AuthState.unauthenticated());\n      }\n    } catch (e) {\n      emit(AuthState.error(e.toString()));\n    }\n  }\n\n  void _listenToAuthChanges() {\n    // Implementar stream de cambios de autenticaci\xf3n\n    // _authSubscription = _authRepository.authStateChanges.listen(...)\n  }\n\n  Future<void> signInWithEmail(String email, String password) async {\n    emit(const AuthState.loading());\n    \n    try {\n      final result = await _loginWithEmailUseCase.call(\n        LoginWithEmailParams(email: email, password: password),\n      );\n      \n      _handleAuthResult(result);\n    } catch (e) {\n      emit(AuthState.error(e.toString()));\n    }\n  }\n\n  Future<void> signInWithGoogle() async {\n    emit(const AuthState.loading());\n    \n    try {\n      final result = await _loginWithGoogleUseCase.call(null);\n      _handleAuthResult(result);\n    } catch (e) {\n      emit(AuthState.error(e.toString()));\n    }\n  }\n\n  Future<void> register(String email, String password, String displayName) async {\n    emit(const AuthState.loading());\n    \n    try {\n      final result = await _registerUseCase.call(\n        RegisterParams(\n          email: email,\n          password: password,\n          displayName: displayName,\n        ),\n      );\n      \n      _handleAuthResult(result);\n    } catch (e) {\n      emit(AuthState.error(e.toString()));\n    }\n  }\n\n  Future<void> signOut() async {\n    try {\n      await _logoutUseCase.call(null);\n      emit(const AuthState.unauthenticated());\n    } catch (e) {\n      emit(AuthState.error(e.toString()));\n    }\n  }\n\n  void _handleAuthResult(AuthResult result) {\n    switch (result.status) {\n      case AuthStatus.authenticated:\n        if (result.user != null) {\n          emit(AuthState.authenticated(result.user!));\n        }\n        break;\n      case AuthStatus.emailNotVerified:\n        emit(AuthState.emailVerificationRequired(result.user));\n        break;\n      case AuthStatus.phoneNotVerified:\n        emit(AuthState.phoneVerificationRequired(result.user));\n        break;\n      case AuthStatus.error:\n        emit(AuthState.error(result.message ?? 'Error desconocido'));\n        break;\n      default:\n        emit(const AuthState.unauthenticated());\n    }\n  }\n\n  @override\n  Future<void> close() {\n    _authSubscription?.cancel();\n    return super.close();\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"-auth-state",children:["\ud83c\udfad ",(0,a.jsx)(n.strong,{children:"Auth State"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/presentation/cubit/auth_state.dart"',children:"part of 'auth_cubit.dart';\n\n@freezed\nclass AuthState with _$AuthState {\n  const factory AuthState.initial() = _Initial;\n  \n  const factory AuthState.loading() = _Loading;\n  \n  const factory AuthState.authenticated(User user) = _Authenticated;\n  \n  const factory AuthState.unauthenticated() = _Unauthenticated;\n  \n  const factory AuthState.emailVerificationRequired(User? user) = _EmailVerificationRequired;\n  \n  const factory AuthState.phoneVerificationRequired(User? user) = _PhoneVerificationRequired;\n  \n  const factory AuthState.error(String message) = _Error;\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-interfaz-de-usuario",children:["\ud83c\udfa8 ",(0,a.jsx)(n.strong,{children:"Interfaz de Usuario"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-login-page",children:["\ud83d\udd10 ",(0,a.jsx)(n.strong,{children:"Login Page"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/presentation/pages/auth/login_page.dart"',children:"import 'package:flutter/material.dart';\nimport 'package:flutter_bloc/flutter_bloc.dart';\nimport 'package:auto_route/auto_route.dart';\n\nimport '../../../core/di/injection.dart';\nimport '../../cubit/auth_cubit.dart';\nimport '../../widgets/auth_text_field.dart';\nimport '../../widgets/auth_button.dart';\nimport '../../widgets/social_login_buttons.dart';\n\n@RoutePage()\nclass LoginPage extends StatefulWidget implements AutoRouteWrapper {\n  const LoginPage({Key? key}) : super(key: key);\n\n  @override\n  Widget wrappedRoute(BuildContext context) {\n    return BlocProvider(\n      create: (_) => getIt<AuthCubit>(),\n      child: this,\n    );\n  }\n\n  @override\n  State<LoginPage> createState() => _LoginPageState();\n}\n\nclass _LoginPageState extends State<LoginPage> {\n  final _formKey = GlobalKey<FormState>();\n  final _emailController = TextEditingController();\n  final _passwordController = TextEditingController();\n  \n  bool _obscurePassword = true;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: BlocListener<AuthCubit, AuthState>(\n        listener: (context, state) {\n          state.whenOrNull(\n            authenticated: (user) {\n              context.router.pushAndClearStack('/home');\n            },\n            error: (message) {\n              ScaffoldMessenger.of(context).showSnackBar(\n                SnackBar(\n                  content: Text(message),\n                  backgroundColor: Theme.of(context).colorScheme.error,\n                ),\n              );\n            },\n          );\n        },\n        child: SafeArea(\n          child: SingleChildScrollView(\n            padding: const EdgeInsets.all(24.0),\n            child: Form(\n              key: _formKey,\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.stretch,\n                children: [\n                  const SizedBox(height: 60),\n                  \n                  // \ud83c\udfa8 Logo y t\xedtulo\n                  _buildHeader(),\n                  \n                  const SizedBox(height: 48),\n                  \n                  // \ud83d\udce7 Email field\n                  AuthTextField(\n                    controller: _emailController,\n                    labelText: 'Email',\n                    keyboardType: TextInputType.emailAddress,\n                    prefixIcon: Icons.email_outlined,\n                    validator: _validateEmail,\n                  ),\n                  \n                  const SizedBox(height: 16),\n                  \n                  // \ud83d\udd10 Password field\n                  AuthTextField(\n                    controller: _passwordController,\n                    labelText: 'Contrase\xf1a',\n                    obscureText: _obscurePassword,\n                    prefixIcon: Icons.lock_outlined,\n                    suffixIcon: IconButton(\n                      icon: Icon(\n                        _obscurePassword\n                            ? Icons.visibility_outlined\n                            : Icons.visibility_off_outlined,\n                      ),\n                      onPressed: () => setState(() {\n                        _obscurePassword = !_obscurePassword;\n                      }),\n                    ),\n                    validator: _validatePassword,\n                  ),\n                  \n                  const SizedBox(height: 8),\n                  \n                  // \ud83d\udd17 Forgot password\n                  Align(\n                    alignment: Alignment.centerRight,\n                    child: TextButton(\n                      onPressed: _handleForgotPassword,\n                      child: const Text('\xbfOlvidaste tu contrase\xf1a?'),\n                    ),\n                  ),\n                  \n                  const SizedBox(height: 24),\n                  \n                  // \ud83d\udd18 Login button\n                  BlocBuilder<AuthCubit, AuthState>(\n                    builder: (context, state) {\n                      final isLoading = state.maybeWhen(\n                        loading: () => true,\n                        orElse: () => false,\n                      );\n                      \n                      return AuthButton(\n                        onPressed: isLoading ? null : _handleLogin,\n                        isLoading: isLoading,\n                        child: const Text('Iniciar Sesi\xf3n'),\n                      );\n                    },\n                  ),\n                  \n                  const SizedBox(height: 24),\n                  \n                  // \ud83c\udf10 Social login\n                  const SocialLoginButtons(),\n                  \n                  const SizedBox(height: 24),\n                  \n                  // \ud83d\udcdd Register link\n                  _buildRegisterLink(),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildHeader() {\n    return Column(\n      children: [\n        // \ud83c\udfa8 Logo\n        Container(\n          width: 120,\n          height: 120,\n          decoration: BoxDecoration(\n            shape: BoxShape.circle,\n            gradient: LinearGradient(\n              colors: [\n                Theme.of(context).colorScheme.primary,\n                Theme.of(context).colorScheme.secondary,\n              ],\n            ),\n          ),\n          child: Icon(\n            Icons.camera_alt,\n            size: 60,\n            color: Theme.of(context).colorScheme.onPrimary,\n          ),\n        ),\n        \n        const SizedBox(height: 24),\n        \n        Text(\n          'Bienvenido',\n          style: Theme.of(context).textTheme.headlineMedium?.copyWith(\n            fontWeight: FontWeight.bold,\n          ),\n        ),\n        \n        const SizedBox(height: 8),\n        \n        Text(\n          'Inicia sesi\xf3n para continuar',\n          style: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            color: Theme.of(context).colorScheme.onSurfaceVariant,\n          ),\n        ),\n      ],\n    );\n  }\n\n  Widget _buildRegisterLink() {\n    return Row(\n      mainAxisAlignment: MainAxisAlignment.center,\n      children: [\n        Text(\n          '\xbfNo tienes cuenta? ',\n          style: Theme.of(context).textTheme.bodyMedium,\n        ),\n        TextButton(\n          onPressed: () => context.router.push('/register'),\n          child: const Text('Reg\xedstrate'),\n        ),\n      ],\n    );\n  }\n\n  String? _validateEmail(String? value) {\n    if (value == null || value.isEmpty) {\n      return 'Por favor ingresa tu email';\n    }\n    if (!RegExp(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')\n        .hasMatch(value)) {\n      return 'Por favor ingresa un email v\xe1lido';\n    }\n    return null;\n  }\n\n  String? _validatePassword(String? value) {\n    if (value == null || value.isEmpty) {\n      return 'Por favor ingresa tu contrase\xf1a';\n    }\n    if (value.length < 6) {\n      return 'La contrase\xf1a debe tener al menos 6 caracteres';\n    }\n    return null;\n  }\n\n  void _handleLogin() {\n    if (_formKey.currentState!.validate()) {\n      context.read<AuthCubit>().signInWithEmail(\n        _emailController.text.trim(),\n        _passwordController.text,\n      );\n    }\n  }\n\n  void _handleForgotPassword() {\n    context.router.push('/forgot-password');\n  }\n\n  @override\n  void dispose() {\n    _emailController.dispose();\n    _passwordController.dispose();\n    super.dispose();\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"-custom-auth-widgets",children:["\ud83c\udfa8 ",(0,a.jsx)(n.strong,{children:"Custom Auth Widgets"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",metastring:'title="lib/presentation/widgets/auth_button.dart"',children:"import 'package:flutter/material.dart';\n\nclass AuthButton extends StatelessWidget {\n  const AuthButton({\n    Key? key,\n    required this.onPressed,\n    required this.child,\n    this.isLoading = false,\n    this.variant = AuthButtonVariant.primary,\n  }) : super(key: key);\n\n  final VoidCallback? onPressed;\n  final Widget child;\n  final bool isLoading;\n  final AuthButtonVariant variant;\n\n  @override\n  Widget build(BuildContext context) {\n    return SizedBox(\n      height: 56,\n      child: ElevatedButton(\n        onPressed: isLoading ? null : onPressed,\n        style: _getButtonStyle(context),\n        child: isLoading\n            ? SizedBox(\n                height: 20,\n                width: 20,\n                child: CircularProgressIndicator(\n                  strokeWidth: 2,\n                  valueColor: AlwaysStoppedAnimation<Color>(\n                    variant == AuthButtonVariant.primary\n                        ? Theme.of(context).colorScheme.onPrimary\n                        : Theme.of(context).colorScheme.onSurface,\n                  ),\n                ),\n              )\n            : child,\n      ),\n    );\n  }\n\n  ButtonStyle _getButtonStyle(BuildContext context) {\n    switch (variant) {\n      case AuthButtonVariant.primary:\n        return ElevatedButton.styleFrom(\n          backgroundColor: Theme.of(context).colorScheme.primary,\n          foregroundColor: Theme.of(context).colorScheme.onPrimary,\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(12),\n          ),\n        );\n      case AuthButtonVariant.secondary:\n        return ElevatedButton.styleFrom(\n          backgroundColor: Theme.of(context).colorScheme.surfaceVariant,\n          foregroundColor: Theme.of(context).colorScheme.onSurfaceVariant,\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(12),\n          ),\n        );\n      case AuthButtonVariant.outlined:\n        return OutlinedButton.styleFrom(\n          foregroundColor: Theme.of(context).colorScheme.primary,\n          side: BorderSide(\n            color: Theme.of(context).colorScheme.primary,\n          ),\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(12),\n          ),\n        );\n    }\n  }\n}\n\nenum AuthButtonVariant {\n  primary,\n  secondary,\n  outlined,\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"-configuraci\xf3n-firebase",children:["\ud83d\udd12 ",(0,a.jsx)(n.strong,{children:"Configuraci\xf3n Firebase"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-inicializaci\xf3n-firebase",children:["\ud83d\udd25 ",(0,a.jsx)(n.strong,{children:"Inicializaci\xf3n Firebase"})]}),"\n","\n",(0,a.jsx)(s.A,{code:"# Instalar Firebase CLI\nnpm install -g firebase-tools\n\n# Login a Firebase\nfirebase login\n\n# Configurar proyecto Flutter\ndart pub global activate flutterfire_cli\n\n# Configurar Firebase para el proyecto\nflutterfire configure",language:"bash",title:"Setup Firebase"}),"\n",(0,a.jsxs)(n.h3,{id:"\ufe0f-configuraci\xf3n-ios-apple-sign-in",children:["\u2699\ufe0f ",(0,a.jsx)(n.strong,{children:"Configuraci\xf3n iOS (Apple Sign-In)"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-swift",metastring:'title="ios/Runner/Info.plist"',children:"<key>CFBundleURLTypes</key>\n<array>\n    <dict>\n        <key>CFBundleURLName</key>\n        <string>com.example.beamme</string>\n        <key>CFBundleURLSchemes</key>\n        <array>\n            <string>com.googleusercontent.apps.YOUR_CLIENT_ID</string>\n        </array>\n    </dict>\n</array>\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"-configuraci\xf3n-android",children:["\ud83e\udd16 ",(0,a.jsx)(n.strong,{children:"Configuraci\xf3n Android"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:'title="android/app/src/main/res/values/strings.xml"',children:'<resources>\n    <string name="app_name">BeamMe</string>\n    <string name="default_web_client_id">YOUR_WEB_CLIENT_ID</string>\n</resources>\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"-checklist-de-implementaci\xf3n",children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Checklist de Implementaci\xf3n"})]}),"\n",(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Dependencias de auth instaladas"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Firebase configurado correctamente"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Entidades del dominio creadas"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Repository interface definido"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Casos de uso implementados"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Estados de auth configurados"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","UI de login/register completada"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Validaciones implementadas"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Manejo de errores configurado"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Social login funcional"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Testing unitario completado"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{title:"\ud83d\udd12 Seguridad",type:"tip",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Nunca"})," hardcodear API keys en el c\xf3digo"]}),"\n",(0,a.jsxs)(n.li,{children:["Usar ",(0,a.jsx)(n.strong,{children:"Flutter Secure Storage"})," para tokens"]}),"\n",(0,a.jsxs)(n.li,{children:["Implementar ",(0,a.jsx)(n.strong,{children:"rate limiting"})," en login attempts"]}),"\n",(0,a.jsxs)(n.li,{children:["Validar ",(0,a.jsx)(n.strong,{children:"siempre"})," en servidor tambi\xe9n"]}),"\n",(0,a.jsxs)(n.li,{children:["Usar ",(0,a.jsx)(n.strong,{children:"HTTPS"})," para todas las comunicaciones"]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-siguiente-paso",children:["\ud83c\udfaf ",(0,a.jsx)(n.strong,{children:"Siguiente Paso"})]}),"\n",(0,a.jsx)(n.p,{children:"\xa1Perfecto! Ya tienes un sistema de autenticaci\xf3n robusto."}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,a.jsx)(n.strong,{children:"Contin\xfaa con"}),": ",(0,a.jsx)(n.a,{href:"/flutterFormacion/docs/desarrollo/navigation",children:"Navegaci\xf3n y Routing"})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"\u23f1\ufe0f Tiempo de implementaci\xf3n: 4-6 horas"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);