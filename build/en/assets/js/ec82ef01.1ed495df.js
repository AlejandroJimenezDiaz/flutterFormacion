"use strict";(self.webpackChunkflutter_guia_completa=self.webpackChunkflutter_guia_completa||[]).push([[4957],{3243:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"servicios/payments","title":"Pagos y Monetizaci\xf3n en Flutter","description":"Introducci\xf3n","source":"@site/docs/servicios/payments.md","sourceDirName":"servicios","slug":"/servicios/payments","permalink":"/flutterFormacion/en/docs/servicios/payments","draft":false,"unlisted":false,"editUrl":"https://github.com/tu-usuario/flutter-guia-completa/tree/main/docs/servicios/payments.md","tags":[],"version":"current","frontMatter":{}}');var r=a(4848),s=a(8453);const t={},c="Pagos y Monetizaci\xf3n en Flutter",o={},l=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Tipos de Monetizaci\xf3n",id:"tipos-de-monetizaci\xf3n",level:2},{value:"1. Compras In-App (IAP)",id:"1-compras-in-app-iap",level:3},{value:"2. Procesadores de Pago",id:"2-procesadores-de-pago",level:3},{value:"3. Pagos M\xf3viles",id:"3-pagos-m\xf3viles",level:3},{value:"Compras In-App con in_app_purchase",id:"compras-in-app-con-in_app_purchase",level:2},{value:"1. Instalaci\xf3n",id:"1-instalaci\xf3n",level:3},{value:"2. Configuraci\xf3n Android",id:"2-configuraci\xf3n-android",level:3},{value:"Google Play Console",id:"google-play-console",level:4},{value:"android/app/src/main/AndroidManifest.xml",id:"androidappsrcmainandroidmanifestxml",level:4},{value:"3. Configuraci\xf3n iOS",id:"3-configuraci\xf3n-ios",level:3},{value:"App Store Connect",id:"app-store-connect",level:4},{value:"ios/Runner/Info.plist",id:"iosrunnerinfoplist",level:4},{value:"4. Implementaci\xf3n B\xe1sica",id:"4-implementaci\xf3n-b\xe1sica",level:3},{value:"Inicializaci\xf3n",id:"inicializaci\xf3n",level:4},{value:"Realizar Compra",id:"realizar-compra",level:4},{value:"Manejar Updates de Compras",id:"manejar-updates-de-compras",level:4},{value:"Stripe Integration",id:"stripe-integration",level:2},{value:"1. Instalaci\xf3n",id:"1-instalaci\xf3n-1",level:3},{value:"2. Configuraci\xf3n",id:"2-configuraci\xf3n",level:3},{value:"Android",id:"android",level:4},{value:"iOS",id:"ios",level:4},{value:"3. Implementaci\xf3n",id:"3-implementaci\xf3n",level:3},{value:"Inicializaci\xf3n",id:"inicializaci\xf3n-1",level:4},{value:"Crear Payment Intent",id:"crear-payment-intent",level:4},{value:"Procesar Pago en Flutter",id:"procesar-pago-en-flutter",level:4},{value:"Apple Pay &amp; Google Pay",id:"apple-pay--google-pay",level:2},{value:"1. pay Package",id:"1-pay-package",level:3},{value:"2. Configuraci\xf3n Apple Pay",id:"2-configuraci\xf3n-apple-pay",level:3},{value:"ios/Runner/Info.plist",id:"iosrunnerinfoplist-1",level:4},{value:"3. Configuraci\xf3n Google Pay",id:"3-configuraci\xf3n-google-pay",level:3},{value:"android/app/src/main/res/raw/gpay_merchant.json",id:"androidappsrcmainresrawgpay_merchantjson",level:4},{value:"4. Implementaci\xf3n",id:"4-implementaci\xf3n",level:3},{value:"Verificaci\xf3n de Compras",id:"verificaci\xf3n-de-compras",level:2},{value:"1. Verificaci\xf3n Local",id:"1-verificaci\xf3n-local",level:3},{value:"2. Verificaci\xf3n en Servidor",id:"2-verificaci\xf3n-en-servidor",level:3},{value:"Manejo de Suscripciones",id:"manejo-de-suscripciones",level:2},{value:"1. Verificar Estado de Suscripci\xf3n",id:"1-verificar-estado-de-suscripci\xf3n",level:3},{value:"Seguridad y Mejores Pr\xe1cticas",id:"seguridad-y-mejores-pr\xe1cticas",level:2},{value:"1. Validaci\xf3n en Servidor",id:"1-validaci\xf3n-en-servidor",level:3},{value:"2. Manejo de Errores",id:"2-manejo-de-errores",level:3},{value:"3. Testing",id:"3-testing",level:3},{value:"Recursos Adicionales",id:"recursos-adicionales",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pagos-y-monetizaci\xf3n-en-flutter",children:"Pagos y Monetizaci\xf3n en Flutter"})}),"\n",(0,r.jsx)(n.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,r.jsx)(n.p,{children:"Implementar sistemas de pago en aplicaciones Flutter es esencial para monetizar tu app. Esta gu\xeda cubre las principales opciones de pago disponibles, desde compras in-app hasta procesadores de pago externos."}),"\n",(0,r.jsx)(n.h2,{id:"tipos-de-monetizaci\xf3n",children:"Tipos de Monetizaci\xf3n"}),"\n",(0,r.jsx)(n.h3,{id:"1-compras-in-app-iap",children:"1. Compras In-App (IAP)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consumibles"}),": Monedas virtuales, power-ups"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No consumibles"}),": Eliminaci\xf3n de anuncios, features premium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Suscripciones"}),": Acceso mensual/anual a contenido premium"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-procesadores-de-pago",children:"2. Procesadores de Pago"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stripe"}),": Pagos con tarjeta"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PayPal"}),": Pagos online"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Square"}),": Soluci\xf3n completa"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Razorpay"}),": Popular en India"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-pagos-m\xf3viles",children:"3. Pagos M\xf3viles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Apple Pay"}),": iOS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Google Pay"}),": Android"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Samsung Pay"}),": Dispositivos Samsung"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"compras-in-app-con-in_app_purchase",children:"Compras In-App con in_app_purchase"}),"\n",(0,r.jsx)(n.h3,{id:"1-instalaci\xf3n",children:"1. Instalaci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# pubspec.yaml\ndependencies:\n  in_app_purchase: ^3.1.11\n  in_app_purchase_android: ^0.3.0+11\n  in_app_purchase_storekit: ^0.3.6+4\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-configuraci\xf3n-android",children:"2. Configuraci\xf3n Android"}),"\n",(0,r.jsx)(n.h4,{id:"google-play-console",children:"Google Play Console"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Crear productos en Google Play Console"}),"\n",(0,r.jsx)(n.li,{children:"Configurar precios y disponibilidad"}),"\n",(0,r.jsx)(n.li,{children:"Publicar productos (pueden tardar hasta 24h)"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"androidappsrcmainandroidmanifestxml",children:"android/app/src/main/AndroidManifest.xml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<uses-permission android:name="com.android.vending.BILLING" />\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-configuraci\xf3n-ios",children:"3. Configuraci\xf3n iOS"}),"\n",(0,r.jsx)(n.h4,{id:"app-store-connect",children:"App Store Connect"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Crear productos en App Store Connect"}),"\n",(0,r.jsx)(n.li,{children:"Configurar informaci\xf3n del producto"}),"\n",(0,r.jsx)(n.li,{children:"Establecer precios por regi\xf3n"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"iosrunnerinfoplist",children:"ios/Runner/Info.plist"}),"\n",(0,r.jsx)(n.p,{children:"No requiere configuraci\xf3n adicional para IAP b\xe1sico."}),"\n",(0,r.jsx)(n.h3,{id:"4-implementaci\xf3n-b\xe1sica",children:"4. Implementaci\xf3n B\xe1sica"}),"\n",(0,r.jsx)(n.h4,{id:"inicializaci\xf3n",children:"Inicializaci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:in_app_purchase/in_app_purchase.dart';\nimport 'package:in_app_purchase_android/in_app_purchase_android.dart';\nimport 'package:in_app_purchase_storekit/in_app_purchase_storekit.dart';\n\nclass PurchaseService {\n  static const String _consumibleId = 'monedas_100';\n  static const String _noConsumibleId = 'sin_anuncios';\n  static const String _suscripcionId = 'premium_mensual';\n\n  final InAppPurchase _inAppPurchase = InAppPurchase.instance;\n  late StreamSubscription<List<PurchaseDetails>> _subscription;\n  List<ProductDetails> _products = [];\n\n  Future<void> initializePurchases() async {\n    final bool isAvailable = await _inAppPurchase.isAvailable();\n    if (!isAvailable) {\n      throw Exception('Store no disponible');\n    }\n\n    // Configurar listener para compras\n    final Stream<List<PurchaseDetails>> purchaseStream =\n        _inAppPurchase.purchaseStream;\n    _subscription = purchaseStream.listen(\n      _onPurchaseUpdate,\n      onDone: () => _subscription.cancel(),\n      onError: (error) => print('Error en compras: $error'),\n    );\n\n    // Cargar productos disponibles\n    await _loadProducts();\n  }\n\n  Future<void> _loadProducts() async {\n    const Set<String> ids = {\n      _consumibleId,\n      _noConsumibleId,\n      _suscripcionId,\n    };\n\n    final ProductDetailsResponse response =\n        await _inAppPurchase.queryProductDetails(ids);\n\n    if (response.notFoundIDs.isNotEmpty) {\n      print('Productos no encontrados: ${response.notFoundIDs}');\n    }\n\n    _products = response.productDetails;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"realizar-compra",children:"Realizar Compra"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> buyProduct(ProductDetails product) async {\n  final PurchaseParam purchaseParam = PurchaseParam(\n    productDetails: product,\n  );\n\n  try {\n    await _inAppPurchase.buyNonConsumable(\n      purchaseParam: purchaseParam,\n    );\n  } catch (e) {\n    print('Error al comprar: $e');\n    throw Exception('Error en la compra');\n  }\n}\n\nFuture<void> buyConsumable(ProductDetails product) async {\n  final PurchaseParam purchaseParam = PurchaseParam(\n    productDetails: product,\n  );\n\n  try {\n    await _inAppPurchase.buyConsumable(\n      purchaseParam: purchaseParam,\n    );\n  } catch (e) {\n    print('Error al comprar consumible: $e');\n    throw Exception('Error en la compra');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"manejar-updates-de-compras",children:"Manejar Updates de Compras"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void _onPurchaseUpdate(List<PurchaseDetails> purchaseDetailsList) {\n  for (final PurchaseDetails purchaseDetails in purchaseDetailsList) {\n    if (purchaseDetails.status == PurchaseStatus.pending) {\n      // Mostrar loading\n      _showPendingUI();\n    } else if (purchaseDetails.status == PurchaseStatus.error) {\n      // Manejar error\n      _handleError(purchaseDetails.error!);\n    } else if (purchaseDetails.status == PurchaseStatus.purchased ||\n               purchaseDetails.status == PurchaseStatus.restored) {\n      // Verificar compra y dar contenido\n      _verifyPurchase(purchaseDetails);\n    }\n\n    // Importante: completar la transacci\xf3n\n    if (purchaseDetails.pendingCompletePurchase) {\n      _inAppPurchase.completePurchase(purchaseDetails);\n    }\n  }\n}\n\nvoid _verifyPurchase(PurchaseDetails purchaseDetails) {\n  // Verificar compra en tu servidor\n  // Dar acceso al contenido comprado\n  switch (purchaseDetails.productID) {\n    case _consumibleId:\n      _addCoins(100);\n      break;\n    case _noConsumibleId:\n      _removeAds();\n      break;\n    case _suscripcionId:\n      _activatePremium();\n      break;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"stripe-integration",children:"Stripe Integration"}),"\n",(0,r.jsx)(n.h3,{id:"1-instalaci\xf3n-1",children:"1. Instalaci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flutter_stripe: ^10.1.1\n  http: ^1.1.0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-configuraci\xf3n",children:"2. Configuraci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"android",children:"Android"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// android/app/src/main/kotlin/.../MainActivity.kt\nimport io.flutter.embedding.android.FlutterActivity\nimport io.flutter.embedding.engine.FlutterEngine\nimport io.flutter.plugins.GeneratedPluginRegistrant\n\nclass MainActivity: FlutterActivity() {\n    override fun configureFlutterEngine(flutterEngine: FlutterEngine) {\n        GeneratedPluginRegistrant.registerWith(flutterEngine)\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ios",children:"iOS"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-swift",children:"// ios/Runner/AppDelegate.swift\nimport UIKit\nimport Flutter\nimport Stripe\n\n@UIApplicationMain\n@objc class AppDelegate: FlutterAppDelegate {\n    override func application(\n        _ application: UIApplication,\n        didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?\n    ) -> Bool {\n        GeneratedPluginRegistrant.register(with: self)\n        return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-implementaci\xf3n",children:"3. Implementaci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"inicializaci\xf3n-1",children:"Inicializaci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_stripe/flutter_stripe.dart';\n\nclass StripeService {\n  static const String _publishableKey = 'pk_test_...'; // Tu clave p\xfablica\n  \n  static Future<void> init() async {\n    Stripe.publishableKey = _publishableKey;\n    await Stripe.instance.applySettings();\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"crear-payment-intent",children:"Crear Payment Intent"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Backend (Node.js/Express ejemplo)\napp.post('/create-payment-intent', async (req, res) => {\n  const { amount, currency } = req.body;\n\n  const paymentIntent = await stripe.paymentIntents.create({\n    amount: amount, // En centavos\n    currency: currency,\n    automatic_payment_methods: {\n      enabled: true,\n    },\n  });\n\n  res.send({\n    clientSecret: paymentIntent.client_secret,\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h4,{id:"procesar-pago-en-flutter",children:"Procesar Pago en Flutter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PaymentService {\n  Future<bool> processPayment({\n    required double amount,\n    required String currency,\n  }) async {\n    try {\n      // 1. Crear PaymentIntent en tu servidor\n      final response = await _createPaymentIntent(\n        amount: (amount * 100).round(), // Convertir a centavos\n        currency: currency,\n      );\n\n      // 2. Confirmar pago con Stripe\n      await Stripe.instance.initPaymentSheet(\n        paymentSheetParameters: SetupPaymentSheetParameters(\n          paymentIntentClientSecret: response['clientSecret'],\n          merchantDisplayName: 'Mi Tienda',\n          style: ThemeMode.system,\n        ),\n      );\n\n      // 3. Presentar Payment Sheet\n      await Stripe.instance.presentPaymentSheet();\n\n      return true;\n    } on StripeException catch (e) {\n      print('Error de Stripe: ${e.error}');\n      return false;\n    } catch (e) {\n      print('Error general: $e');\n      return false;\n    }\n  }\n\n  Future<Map<String, dynamic>> _createPaymentIntent({\n    required int amount,\n    required String currency,\n  }) async {\n    final response = await http.post(\n      Uri.parse('https://tu-servidor.com/create-payment-intent'),\n      headers: {'Content-Type': 'application/json'},\n      body: json.encode({\n        'amount': amount,\n        'currency': currency,\n      }),\n    );\n\n    return json.decode(response.body);\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"apple-pay--google-pay",children:"Apple Pay & Google Pay"}),"\n",(0,r.jsx)(n.h3,{id:"1-pay-package",children:"1. pay Package"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  pay: ^2.0.0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-configuraci\xf3n-apple-pay",children:"2. Configuraci\xf3n Apple Pay"}),"\n",(0,r.jsx)(n.h4,{id:"iosrunnerinfoplist-1",children:"ios/Runner/Info.plist"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<key>com.apple.developer.in-app-payments</key>\n<array>\n    <string>merchant.com.miempresa.miapp</string>\n</array>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-configuraci\xf3n-google-pay",children:"3. Configuraci\xf3n Google Pay"}),"\n",(0,r.jsx)(n.h4,{id:"androidappsrcmainresrawgpay_merchantjson",children:"android/app/src/main/res/raw/gpay_merchant.json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "PAYMENT_GATEWAY",\n  "gateway": "stripe",\n  "gatewayMerchantId": "tu_merchant_id"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-implementaci\xf3n",children:"4. Implementaci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:pay/pay.dart';\n\nclass MobilePayService {\n  static const _paymentItems = [\n    PaymentItem(\n      label: 'Mi Producto',\n      amount: '9.99',\n      status: PaymentItemStatus.final_price,\n    )\n  ];\n\n  Widget buildApplePayButton() {\n    return ApplePayButton(\n      paymentConfiguration: PaymentConfiguration.fromAsset(\n        'apple_pay_payment_profile.json'\n      ),\n      paymentItems: _paymentItems,\n      style: ApplePayButtonStyle.black,\n      type: ApplePayButtonType.buy,\n      onPaymentResult: _onApplePayResult,\n      loadingIndicator: const Center(child: CircularProgressIndicator()),\n    );\n  }\n\n  Widget buildGooglePayButton() {\n    return GooglePayButton(\n      paymentConfiguration: PaymentConfiguration.fromAsset(\n        'gpay_payment_profile.json'\n      ),\n      paymentItems: _paymentItems,\n      type: GooglePayButtonType.buy,\n      onPaymentResult: _onGooglePayResult,\n      loadingIndicator: const Center(child: CircularProgressIndicator()),\n    );\n  }\n\n  void _onApplePayResult(Map<String, dynamic> result) {\n    // Procesar resultado de Apple Pay\n    print('Apple Pay result: $result');\n  }\n\n  void _onGooglePayResult(Map<String, dynamic> result) {\n    // Procesar resultado de Google Pay\n    print('Google Pay result: $result');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"verificaci\xf3n-de-compras",children:"Verificaci\xf3n de Compras"}),"\n",(0,r.jsx)(n.h3,{id:"1-verificaci\xf3n-local",children:"1. Verificaci\xf3n Local"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PurchaseValidator {\n  static bool isValidPurchase(PurchaseDetails purchase) {\n    // Verificaciones b\xe1sicas\n    if (purchase.status != PurchaseStatus.purchased) {\n      return false;\n    }\n\n    if (purchase.verificationData.localVerificationData.isEmpty) {\n      return false;\n    }\n\n    return true;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-verificaci\xf3n-en-servidor",children:"2. Verificaci\xf3n en Servidor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> verifyPurchaseOnServer(PurchaseDetails purchase) async {\n  final response = await http.post(\n    Uri.parse('https://tu-servidor.com/verify-purchase'),\n    headers: {'Content-Type': 'application/json'},\n    body: json.encode({\n      'purchaseToken': purchase.verificationData.localVerificationData,\n      'productId': purchase.productID,\n      'platform': Platform.isIOS ? 'ios' : 'android',\n    }),\n  );\n\n  final result = json.decode(response.body);\n  return result['valid'] == true;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"manejo-de-suscripciones",children:"Manejo de Suscripciones"}),"\n",(0,r.jsx)(n.h3,{id:"1-verificar-estado-de-suscripci\xf3n",children:"1. Verificar Estado de Suscripci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class SubscriptionService {\n  Future<bool> isSubscriptionActive(String subscriptionId) async {\n    try {\n      final QueryPurchaseDetailsResponse response =\n          await InAppPurchase.instance.queryPastPurchases();\n\n      for (PurchaseDetails purchase in response.pastPurchases) {\n        if (purchase.productID == subscriptionId &&\n            purchase.status == PurchaseStatus.purchased) {\n          // Verificar si la suscripci\xf3n sigue activa\n          return await _verifySubscriptionStatus(purchase);\n        }\n      }\n\n      return false;\n    } catch (e) {\n      print('Error verificando suscripci\xf3n: $e');\n      return false;\n    }\n  }\n\n  Future<bool> _verifySubscriptionStatus(PurchaseDetails purchase) async {\n    // Verificar en tu servidor si la suscripci\xf3n sigue activa\n    // Esto debe incluir verificaci\xf3n de fecha de expiraci\xf3n\n    final response = await http.post(\n      Uri.parse('https://tu-servidor.com/verify-subscription'),\n      body: json.encode({\n        'purchaseToken': purchase.verificationData.localVerificationData,\n        'productId': purchase.productID,\n      }),\n    );\n\n    final result = json.decode(response.body);\n    return result['active'] == true;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"seguridad-y-mejores-pr\xe1cticas",children:"Seguridad y Mejores Pr\xe1cticas"}),"\n",(0,r.jsx)(n.h3,{id:"1-validaci\xf3n-en-servidor",children:"1. Validaci\xf3n en Servidor"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Nunca confiar solo en el cliente"})}),"\n",(0,r.jsx)(n.li,{children:"Verificar todas las compras en tu servidor"}),"\n",(0,r.jsx)(n.li,{children:"Usar webhooks para actualizaciones en tiempo real"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-manejo-de-errores",children:"2. Manejo de Errores"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PurchaseErrorHandler {\n  static String getErrorMessage(IAPError error) {\n    switch (error.code) {\n      case 'purchase_cancelled':\n        return 'Compra cancelada por el usuario';\n      case 'network_error':\n        return 'Error de conexi\xf3n. Int\xe9ntalo m\xe1s tarde';\n      case 'purchase_invalid':\n        return 'Producto no v\xe1lido';\n      case 'purchase_not_allowed':\n        return 'Compras no permitidas en este dispositivo';\n      default:\n        return 'Error desconocido: ${error.message}';\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-testing",children:"3. Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Solo para testing - NUNCA en producci\xf3n\nclass TestPurchases {\n  static const Map<String, String> testProducts = {\n    'android.test.purchased': 'Test Purchased',\n    'android.test.canceled': 'Test Canceled',\n    'android.test.item_unavailable': 'Test Unavailable',\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"recursos-adicionales",children:"Recursos Adicionales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://pub.dev/packages/in_app_purchase",children:"In-App Purchase Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.stripe.com/payments/quickstart",children:"Stripe Flutter Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.apple.com/apple-pay/",children:"Apple Pay Guidelines"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developers.google.com/pay/api",children:"Google Pay API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.apple.com/app-store/review/guidelines/#payments",children:"App Store Review Guidelines - Payments"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>c});var i=a(6540);const r={},s=i.createContext(r);function t(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);